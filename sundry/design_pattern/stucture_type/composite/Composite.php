<?php

/**
 *  component 抽象类或者接口 如 学校
 *  composite 组合者        如 学院/系
 *  left      叶子         如  专业 ，没有下级
 */

abstract class OrganizationComponent
{
    private $name;
    private $desc;

    protected function add(OrganizationComponent $organizationComponent)
    {
        // 默认实现，具体的添加和移除，子类或实现类重写
        throw new \Exception();
    }

    protected function remove(OrganizationComponent $organizationComponent) {
        throw new \Exception();
    }
    public function __construct($name, $desc)
    {
        $this->name = $name;
        $this->desc = $desc;
    }

    public function getName()
    {
        return $this->name;
    }

    public function setName($name)
    {
        $this->name = $name;
    }
    public function getDesc()
    {
        return $this->desc;
    }

    public function setDesc($desc)
    {
        $this->name = $desc;
    }

    abstract public function show();
}
// 大学
class University extends OrganizationComponent {
    public $organizationComponents;
    public function __construct($name, $desc)
    {
        parent::__construct($name, $desc);
    }

    public function add(OrganizationComponent $organizationComponent)
    {
        // TODO: Change the autogenerated stub
        $this->organizationComponents[] = $organizationComponent;

    }
    public function remove(OrganizationComponent $organizationComponent)
    {
        if (in_array($organizationComponent, $this->organizationComponents)) {
            unset($this->organizationComponents[$organizationComponent]);
        }
    }

    public function getName()
    {
        return parent::getName(); // TODO: Change the autogenerated stub
    }

    public function getDesc()
    {
        return parent::getDesc(); // TODO: Change the autogenerated stub
    }

    public function show()
    {
        // TODO: Implement show() method.
        print_r("==== {$this->getName()} === <br/>");
        // 使用递归去示实现
        foreach ($this->organizationComponents as $organizationComponent) {
            $organizationComponent->show();
        }
    }
}

class College extends OrganizationComponent {
    public $organizationComponents;
    public function __construct($name, $desc)
    {
        parent::__construct($name, $desc);
    }

    /**
     * composite
     * 方法重写 可能和component 不一致
     * @param OrganizationComponent $organizationComponent
     */
    public function add(OrganizationComponent $organizationComponent)
    {
        // TODO: Change the autogenerated stub
        $this->organizationComponents[] = $organizationComponent;
    }
    public function remove(OrganizationComponent $organizationComponent)
    {
        if (in_array($organizationComponent, $this->organizationComponents)) {
            unset($this->organizationComponents[$organizationComponent]);
        }
    }

    public function getName()
    {
        return parent::getName(); // TODO: Change the autogenerated stub
    }

    public function getDesc()
    {
        return parent::getDesc(); // TODO: Change the autogenerated stub
    }
    public function show()
    {
        // TODO: Implement show() method.
        print_r("==== {$this->getName()} === <br/>");
        // 使用递归去示实现
        foreach ($this->organizationComponents as $organizationComponent) {
            $organizationComponent->show();
        }
    }
}

// 专业 ， 叶子，没有下级
class Department  extends OrganizationComponent
{
    public function __construct($name, $desc)
    {
        parent::__construct($name, $desc);
    }

    public function getName()
    {
        return parent::getName(); // TODO: Change the autogenerated stub
    }

    public function getDesc()
    {
        return parent::getDesc(); // TODO: Change the autogenerated stub
    }

    public function show()
    {
        // TODO: Implement show() method.
        print_r(" {$this->getName()}  <br/>");
    }
}

demo();

function demo() {
    // stucture_type/composite/Composite.php
    $university = new University('北大','985大学');
    $computeCollege = new College("计算机系",'科技改变未来');
    $artCollege = new College("艺术系",'陶冶情操');
    $artCollege->add(new Department("音乐",'吉他第乐器'));
    $artCollege->add(new Department("美术",'绘画山河'));
    $computeCollege->add(new Department('软件开发','网站开发'));
    $university->add($computeCollege);
    $university->add($artCollege);

    $university->show();
}



